# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013, Arman Arkilic
# This file is distributed under the same license as the pyBL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pyBL 0.1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-20 17:57\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../Manual.rst:2
# a24476e5d08b4c9f806ca570571afea8
msgid "Manual"
msgstr ""

#: ../../../pyBL/commands.py:docstring of commands:2
# c2aa0257d2644be6b7a8ff6f0e711ad2
msgid "Commands"
msgstr ""

#: ../../../pyBL/commands.py:docstring of commands:3
# 0cecdd74415d4d90bc8859be8b530d7f
msgid "Python Beamline Scripting environment for NSLS2 beamlines provides users with routines handling hardware control, experimental logging, reciprocal space calculation and several other services that deals with image processing. The following commands are provided as of version 0.1.0 and are subject to change. Please use an up-to-date version of this code and documentation if you would like to benefit from full-capability."
msgstr ""

#: ../../../pyBL/commands.py:docstring of commands.addref:1
# 25ce7db899f44cb49180b266992e5e29
msgid "addref -- add reflection interactively addref [h k l] {'tag'} -- add reflection with current position and energy addref [h k l] (p1,p2...pN) energy {'tag'} -- add arbitrary reflection"
msgstr ""

#: ../../../pyBL/commands.py:docstring of commands.allhkl:1
# 8a495d23258d41d18b0bc589c65702b9
msgid "allhkl [h k l] -- print all hkl solutions ignoring limits"
msgstr ""

#: ../../../pyBL/commands.py:docstring of commands.angles_to_hkl:1
# e9d9d0fa9d244b1f9709dd1f72c134fc
msgid "Converts a set of diffractometer angles to an hkl position Usage: ((h, k, l), paramDict)=angles_to_hkl(self, (a1, a2,aN), energy=None)"
msgstr ""

#: ../../../pyBL/commands.py:docstring of commands.c2th:1
# e2699f7c98a445d084fee53affc48d64
msgid "c2th [h k l]  -- calculate two-theta angle for reflection"
msgstr ""

#: ../../../pyBL/commands.py:docstring of commands.checkub:1
# 86fb7f87042945df8b9825b890645301
msgid "checkub -- show calculated and entered hkl values for reflections."
msgstr ""

#: ../../../pyBL/commands.py:docstring of commands.con:1
# fe8370d172764407a1cb5869a745d542
msgid "con -- list available constraints and values con <name> {val} -- constrains and optionally sets one constraint con <name> {val} <name> {val} <name> {val} -- clears and then fully constrains"
msgstr ""

#: ../../../pyBL/commands.py:docstring of commands.con:5
# 170e67e4fc8948ca8754c4adb270c5f3
msgid "Select three constraints using 'con' and 'uncon'. Choose up to one from each of the sample and detector columns and up to three from the sample column."
msgstr ""

#: ../../../pyBL/commands.py:docstring of commands.con:9
# f8a702fa45004ecf98043b5c1a699084
msgid "Not all constraint combinations are currently available:"
msgstr ""

#: ../../../pyBL/commands.py:docstring of commands.con:11
# a786f0b2fa6a4643ae2bb96bccd5d2f9
msgid "1 x samp:              all 80 of 80 2 x samp and 1 x ref:  chi & phi"
msgstr ""

#: ../../../pyBL/commands.py:docstring of commands.con:13
# ebc48c66bb364437a07f87b4601492a8
msgid "mu & eta chi=90 & mu=0 (2.5 of 6)"
msgstr ""

#: ../../../pyBL/commands.py:docstring of commands.con:15
# e7041b249e41493aa0375b1f89f74c1a
msgid "2 x samp and 1 x det:  0 of 6 3 x samp:              eta, chi & phi (1 of 4)"
msgstr ""

#: ../../../pyBL/commands.py:docstring of commands.con:18
# fca7982928af461aacf692bdd02717aa
msgid "See also 'uncon'"
msgstr ""

#: ../../../pyBL/commands.py:docstring of commands.delref:1
# d8ad537a99864195b77f871022a1ec80
msgid "delref num -- deletes a reflection (numbered from 1)"
msgstr ""

#: ../../../pyBL/commands.py:docstring of commands.editref:1
# 52a5a8d66023480d92bc1292a220a800
msgid "editref num -- interactively edit a reflection."
msgstr ""

#: ../../../pyBL/commands.py:docstring of commands.getLogLevel:1
# e1564f124b004a23b6e9c0b73927ebb5
msgid "Returns the threshold of Python Logging Instances. User can set the level of detail for \"diffractometer\" log files:"
msgstr ""

#: ../../../pyBL/commands.py:docstring of commands.getLogLevel:3
#: ../../../pyBL/commands.py:docstring of commands.setLogLevel:3
# 2dd21b8d4c234450958ec4590d7b784f
# f0076083e8b44422abf12b8975f6e147
msgid "Level       When it is used DEBUG       Detailed information, typically of interest only when diagnosing problems. INFO        Confirmation that things are working as expected. WARNING     An indication that something unexpected happened, or indicative of some problem in the near future (e.g. disk space low). The software is still working as expected. ERROR       Due to a more serious problem, the software has not been able to perform some function. CRITICAL    A serious error, indicating that the program itself may be unable to continue running."
msgstr ""

#: ../../../pyBL/commands.py:docstring of commands.get_low_limit:2
# 1e22d7f6ff3240f1a8296b88d30a651e
msgid "get_low_limit(name=Angle)"
msgstr ""

#: ../../../pyBL/commands.py:docstring of commands.get_low_limit:3
# f866b7b2d57141dfb73a33e1f748c751
msgid "Returns the low limit for a specific angle."
msgstr ""

#: ../../../pyBL/commands.py:docstring of commands.hkl_to_angles:1
# d37b935800864a159291d76cf6c6d76e
msgid "Convert a given hkl vector to a set of diffractometer angles"
msgstr ""

#: ../../../pyBL/commands.py:docstring of commands.listub:1
# a3ee404e830046cb966c8832d10bd0a2
msgid "listub -- list the ub calculations available to load."
msgstr ""

#: ../../../pyBL/commands.py:docstring of commands.loadub:1
# 487d2b5159d74f749a7114a4cbaa5a6a
msgid "loadub {'name'|num} -- load an existing ub calculation"
msgstr ""

#: ../../../pyBL/commands.py:docstring of commands.move:1
# 43a3d298476047f78026e3bd7db17407
msgid "Move a single motor to a user designated location. For multiple motors, one can  write their own custom macros by utilizing position() or move(). Position is suggested if user defined motion involves several motors moving  in a coherent fashion.Unlike mainstream beamline hardware motion control and XRay diffraction experiment software, this tool allows user to move  multiple motors simulatenously. Users can also use this python scripting environment in order to control other hardware alongside motors also simulatenously.  Usage:"
msgstr ""

#: ../../../pyBL/commands.py:docstring of commands.move:9
# b9d68b8248f64e08b6e9eaa01cb28aaa
msgid "move(angle,position)"
msgstr ""

#: ../../../pyBL/commands.py:docstring of commands.newub:1
# bf283c8845f342dfa73890f2fa3fadf7
msgid "newub {'name'} -- start a new ub calculation name"
msgstr ""

#: ../../../pyBL/commands.py:docstring of commands.position:1
# dd1c82e8525e4aadb46df3d2689ef2d9
msgid "Users can define their own angle-value pair dictionaries.The motors will be moved to these positions  if the defined positions are within motors' hardware limits Usage:"
msgstr ""

#: ../../../pyBL/commands.py:docstring of commands.position:4
# 09c9ed772bd34e74b928e236badc1ee4
msgid "position({'angle#1':value1,'angle2':value2,...})"
msgstr ""

#: ../../../pyBL/commands.py:docstring of commands.saveubas:1
# 2f593575ddd949d6900b41e246bbbc38
msgid "saveubas 'name' -- save the ub calculation with a new name"
msgstr ""

#: ../../../pyBL/commands.py:docstring of commands.setLogLevel:1
# e5c14f6357304e71813be7a6f7b23d00
msgid "Sets the threshold of Python Logging Instances. User can set the level of detail for diffractometer log files:"
msgstr ""

#: ../../../pyBL/commands.py:docstring of commands.setName:1
# 36c80f1b581a43cab43415d1beee6e91
msgid "setName--sets the diffractometer configuration name."
msgstr ""

#: ../../../pyBL/commands.py:docstring of commands.setlat:1
# 6da8f80c2e7842808fdb9656aab16767
msgid "setlat  -- interactively enter lattice parameters (Angstroms and Deg) setlat name a -- assumes cubic setlat name a b -- assumes tetragonal setlat name a b c -- assumes ortho setlat name a b c gamma -- assumes mon/hex with gam not equal to 90 setlat name a b c alpha beta gamma -- arbitrary"
msgstr ""

#: ../../../pyBL/commands.py:docstring of commands.setu:1
# b9af23c7b54349768d5d8e68c871ba26
msgid "setu {((,,),(,,),(,,))} -- manually set u matrix"
msgstr ""

#: ../../../pyBL/commands.py:docstring of commands.setub:1
# 46236a81275c47b889938419d2306054
msgid "setub {((,,),(,,),(,,))} -- manually set ub matrix"
msgstr ""

#: ../../../pyBL/commands.py:docstring of commands.showref:1
# 021e057d55634787bd81e729461fc35f
msgid "showref -- shows full reflection list"
msgstr ""

#: ../../../pyBL/commands.py:docstring of commands.swapref:1
# f2539a9ba501404c9f9c08696418786d
msgid "swapref -- swaps first two reflections used for calulating U matrix swapref num1 num2 -- swaps two reflections (numbered from 1)"
msgstr ""

#: ../../../pyBL/commands.py:docstring of commands.trialub:1
# abb0d9ab2ee943fda61cb1ef5eca7e08
msgid "trialub -- (re)calculate u matrix from ref1 only (check carefully)."
msgstr ""

#: ../../../pyBL/commands.py:docstring of commands.ub:1
# 70e0dd28257b4628a226f5cfb4e1484d
msgid "ub -- show the complete state of the ub calculation"
msgstr ""

#: ../../../pyBL/commands.py:docstring of commands.wavelength:1
# 2afe863ee6c94f7f90adb757ecaa1d30
msgid "wavelength(value=None)-- sets the wavelength for the reciprocal space calculations"
msgstr ""

#: ../../../pyBL/commands.py:docstring of commands.where:1
# 376657c344b84c71a5a6bc8ed3f030b9
msgid "where()--Returns the all the motor positions and current hkl coordinates"
msgstr ""

#: ../../Manual.rst:9
# 3d1f0c880fba40a69074de01a078bf79
msgid "Developer Manual"
msgstr ""

#: ../../../pyBL/Diffractometer.py:docstring of Diffractometer:1
# c3220d9d5a524665b23819083be5a945
msgid "Diffractometer and hardware used for XRAY Diffraction experiments are treated as objects with multiple attributes by this code.As a result, diffractometer objects are customizable for each beamline/user. DiffCalc (by Rob Walton-Diamond Light Source) is the heart of the reciprocal space calculation engine and in order to perform reciprocal space calculations, this software creates custom diffractometer and hardware-dependent instances and maps the attributes of these instances (axis names, motor positions, limits, etc...) to DiffCalc objects. In other words, this code uses DiffCalc API without wrapping DiffCalc code, leaving DiffCalc standalone for future updates."
msgstr ""

#: ../../../pyBL/Diffractometer.py:docstring of Diffractometer:3
# 9825e11f61e84b2195bab08f5bace7bb
msgid "**As of v0.1:**"
msgstr ""

#: ../../../pyBL/Diffractometer.py:docstring of Diffractometer:5
# e9cd881d41dd4b93a61978e37daead78
msgid "As Diffcalc documentation also states, DiffCalc core calculation code works with a six-circle geometry.It supports four-circle modes, where two circles are fixed @ zero, five-circle modes, where one circle is fixed and the last is used to keep surface normal in the horizontal lab plane,and six-circle modes where the surface normal is kept parallel to the omega (theta) axis.For each of these there are five variants: the angle of the incoming or outgoing beam to the crystal surface can be fixed the incoming and outgoing angles can be made equal, phi can be fixed,or the azimuthal angle about the momentum-transfer vector can be fixed.The azimuthal variants still need some testing and likely development.                                        DiffCalc does not directly move motors. It is only a reciprocal space calculator. Hardware motion is provided through this software(via EPICS services). Angles stand for the axes(circles) of the diffractometer.EPICS Process Variables(PVs) are assigned to angle instances.These PVs are provided by EPICS IOC and EPICS asyn driver.For more details on this, please check EPICS motor record documentation(http://www.aps.anl.gov/bcda/synApps/motor/). Flexible nature of EPICS applications allows users to add custom hardware on their own,making this software a multi-hardware-platform application."
msgstr ""

#: ../../../pyBL/Diffractometer.py:docstring of Diffractometer.Diffractometer:1
# 47fb74eda15c4b9bb96c33f5888c8d05
msgid "Constructor-Name, tag, author, angle list(axes names) are chosen by the user based on their preferences or standards. Diffractometer expects to get either FourCircle or SixCircle options as geometry. There are 3 engines supported by this software: 'you', 'vlieg', 'willmott'. The latest and fastest of the three is 'you', however, users can choose one engine over another based on their application. Hardware attribute is a placeholder for DiffCalc Hardware Adapter. As of this version, this software utilizes DummyHardwareAdapter. However, in the future versions, this will be replaced with a custom HardwareAdapter instance as we will determine preferences and standards in NSLS2 XRay Diffraction Beamline"
msgstr ""

#: ../../../pyBL/Diffractometer.py:docstring of Diffractometer.Diffractometer.basicSetup:1
# 7cc46ddc0ce14a6f87e2a1841394448e
msgid "Sets up a basic diffractometer with default values. These values can be changed by using native functions such as someAngle.setName(),someAngle.setpositive () can be used. If this is not the preference as this requires setting up too many parameters, diffcalc.config.advancedSetup() provides a cleaner/more organized way to set up a custom diffractometer by utilizing dictionaries. self.engine=engine    self.tag='Basic diffractometer configuration' self.author='default' self.defaultAngleParam={'value':0,"
msgstr ""

#: ../../../pyBL/Diffractometer.py:docstring of Diffractometer.Diffractometer.basicSetup:8
# 15aa379474c449528a74e89fe7b841f3
msgid "'geometry':SixCircle(), 'positiveLimit':180, 'negativeLimit':-180}"
msgstr ""

#: ../../../pyBL/Diffractometer.py:docstring of Diffractometer.Diffractometer.basicSetup:11
# 913c85e6726b4943a845c949d7def768
msgid "parameterList={'angles','geometry'}"
msgstr ""

#: ../../../pyBL/Diffractometer.py:docstring of Diffractometer.Diffractometer.createAngles:1
# fc5c091b6a37469f8d2f991e6ad6fa10
msgid "Creates Angle instances for a hardware.Each angle instance is created and manipulated separately. The user has complete control of each circle of a diffractometer."
msgstr ""

#: ../../../pyBL/Diffractometer.py:docstring of Diffractometer.Diffractometer.getAngleNames:1
# 08c6271fbee2492dbb1ca56d6ce1a164
msgid "Returns a list of Angle instances that includes all the angles associated with a given diffractometer angleList is updated after every operation that changes motor positions."
msgstr ""

#: ../../../pyBL/Diffractometer.py:docstring of Diffractometer.Diffractometer.getAngleValues:1
# 4d8e5401f8934efca2f8e9928476b2f1
msgid "Returns a list of Angle values. These values are read from the EPICS motor record and always refer to actual motor position readings."
msgstr ""

#: ../../../pyBL/Diffractometer.py:docstring of Diffractometer.Diffractometer.getAuthor:1
# 4e979c5dae0f408da843601b01408bc2
msgid "Returns the author of the Diffractometer configuration."
msgstr ""

#: ../../../pyBL/Diffractometer.py:docstring of Diffractometer.Diffractometer.getClient:1
# 1e9fa34fb41d4a7da8ff7aa6f608e1d8
msgid "Returns an Olog Client object that can be used to access several attributes that may be used for searching entries, creating new logbook, tag, property and/or present user with information regarding logs."
msgstr ""

#: ../../../pyBL/Diffractometer.py:docstring of Diffractometer.Diffractometer.getDCInstance:1
# f5193fba095147c988de5dc429b8df3a
msgid "Returns the DiffCalc instance that a a specific Diffractometer is mapped onto. By using this DiffCalc object, developers can write custom applications that deal directly with DiffCalc objects. This is useful once a custom diffcalc functionality is written inside diffcalc, as it is done under commands.py, developer can create a function under this API that is directly linked to the custom diffcalc function."
msgstr ""

#: ../../../pyBL/Diffractometer.py:docstring of Diffractometer.Diffractometer.getEngine:1
# 03b1b28242e94069afd6dae4958ba96d
msgid "Returns DiffCalc calculation engine used in order to notify the user. This makes it possible to write applications that use different calculation engines based on different papers(you,vlieg,willmott) and compare recirporcal space/motor positions."
msgstr ""

#: ../../../pyBL/Diffractometer.py:docstring of Diffractometer.Diffractometer.getGeometry:1
# d68cf477128c4ff1a36a26d9278f17ec
msgid "Returns diffractometer geometry in string format. The reason behind this is to simplify geometry selection for the user through configuration file. For a custom reciprocal space calculation or geometry, a developer should create custom geometries inside DiffCalc(see DiffCalc Developer Manual) and call these geometries via Diffractometer.setGeometry(). Developer also needs to assure that proper number of motors(Angle instances) are created via Config.py."
msgstr ""

#: ../../../pyBL/Diffractometer.py:docstring of Diffractometer.Diffractometer.getHardware:1
# 83e268b80e3749ab8605ede5b2a268fd
msgid "Returns the hardware used for reciprocal space calculations. This is strictly for diffcalc, however,Angle names and Angle values are completely in coherence with userAPI."
msgstr ""

#: ../../../pyBL/Diffractometer.py:docstring of Diffractometer.Diffractometer.getName:1
# f3630417d7644f0d921b36627a8fe5c6
msgid "Returns the diffractometer configuration name. This can be used to identify a specific configuration of a diffractometer as this attribute is accessed directly through the configuration file"
msgstr ""

#: ../../../pyBL/Diffractometer.py:docstring of Diffractometer.Diffractometer.getTag:1
# 92d46d63258e4b148d3d4c200bb14a4a
msgid "Returns Diffractometer Tag. This should not be confused with Olog Tags. This can be identical to Olog tag, however, this tag does not directly map onto Olog tag of pyOlog.conf."
msgstr ""

#: ../../../pyBL/Diffractometer.py:docstring of Diffractometer.Diffractometer.getangleList:1
# dd8004f6c5c648a29b4dcd077f611137
msgid "Returns a list of Angle Instances that refer to the circles of the diffractometer. These objects also map onto DiffCalc \"scannables\"."
msgstr ""

#: ../../../pyBL/Diffractometer.py:docstring of Diffractometer.Diffractometer.setAnglesforHardware:1
# 9f73511cee9d4ff0b9090acf5ed455e6
msgid "Creates Angle instances for a user defined diffractometer. These angles are going to be used fo setting up  reciprocal space calculations as well as hardware motion control.  Each angle instance is assigned to a motor, which provides a coherent structure making it simple to generate  custom geometries for beamline scientists. This also makes it possible to construct a hardware independent configuration that is easy to maintain."
msgstr ""

#: ../../../pyBL/Diffractometer.py:docstring of Diffractometer.Diffractometer.setClient:1
# bf3df77a2e794fcc9b6217f446d98d68
msgid "Sets up an olog client for the given diffractometer configuration. Developers/users can modify this olog client.However, one must be really careful not to lose existing log entries as log entries created have a client field and permissions to these entries that strictly depend on this client."
msgstr ""

#: ../../../pyBL/Diffractometer.py:docstring of Diffractometer.Diffractometer.setDCInstance:1
# f1e127f116f74fcc9f1bf3fa95a075dd
msgid "To be modified as the hardware adapter is initiated"
msgstr ""

#: ../../../pyBL/Diffractometer.py:docstring of Diffractometer.Diffractometer.setEngine:1
# cedb9c3f7285497296b6196408548453
msgid "Sets the engine used in diffraction experiment. This engine is used in reciprocal space calculations through diffcalc.  Supported engines: YOU, WILLMOTT,VLIEG"
msgstr ""

#: ../../../pyBL/Diffractometer.py:docstring of Diffractometer.Diffractometer.setGeometry:1
# 30a08a4c6cb34c279f4bf2089ce4fb4d
msgid "Sets a diffractometer's geometry. This geometry is used for both motor control and and reciprocal space calculations."
msgstr ""

#: ../../../pyBL/Diffractometer.py:docstring of Diffractometer.Diffractometer.setHardwareAdapter:1
# b962d959dd4c40d8bbcb7cc7a16b5490
msgid "Sets up a hardware adapter for DiffCalc calculations. Available adapters:"
msgstr ""

#: ../../../pyBL/Diffractometer.py:docstring of Diffractometer.Diffractometer.setHardwareAdapter:3
# 1415b8c3584b43e386c98f7a7aa62a77
msgid "DummyHardwareAdapter(diffractometerAngleNames)"
msgstr ""

#: ../../../pyBL/Diffractometer.py:docstring of Diffractometer.Diffractometer.setHardwareAdapter:6
# 518202077acb415a9bfae5c24ebd6d5b
msgid "defaultCuts={},  energyScannableMultiplierToGetKeV=1)"
msgstr ""

